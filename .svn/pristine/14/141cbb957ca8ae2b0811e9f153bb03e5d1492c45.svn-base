<template>
  <div>
    <i-search-el-table
      ref="table"
      :query-form="queryForm"
      :columns="columns"
      :data="tableData"
      :advance-query="true"
      :loading="queryLoading"
      :index="false"
      :has-check-box="false"
      @pagination="getAllUser"
    >
      <template slot="simple-form">
        <el-form-item @submit.native.prevent>
          <el-input
            v-model.trim="queryForm.userName"
            :maxlength="50"
            size="small"
            placeholder="请输入用户名"
            clearable
          >
            <el-button
              slot="append"
              icon="el-icon-search"
              @click="getAllUser"
            />
          </el-input>
        </el-form-item>
      </template>
      <template slot="search-form">
        <el-form-item label="登录账号：" prop="userCode">
          <el-input
            v-model.trim="queryForm.userCode"
            :maxlength="30"
            placeholder="请输入登录账号"
            clearable
          />
        </el-form-item>
        <el-form-item label="所属机构：" prop="orgId">
          <treeselect
            :options="options"
            v-model="queryForm.orgId"
            :normalizer="normalizer"
            no-results-text="暂无数据"
            style="width: 200px"
            placeholder="请选择"
          />
        </el-form-item>
        <el-form-item label="用户状态：" prop="delFlag">
          <el-select
            v-model="queryForm.delFlag"
            placeholder="请选择"
            clearable
            class="filter-item"
          >
            <el-option
              v-for="item in userStatusDs"
              :key="item.code"
              :label="item.name"
              :value="item.code"
            />
          </el-select>
        </el-form-item>
        <!-- <el-form-item label="是否兼职：" prop="isPart">
          <el-select
            v-model="queryForm.isPart"
            placeholder="请选择"
            clearable
            class="filter-item"
          >
            <el-option
              v-for="item in isPartDs"
              :key="item.code"
              :label="item.name"
              :value="item.code"
            />
          </el-select>
        </el-form-item> -->
      </template>

      <template slot="isPart" slot-scope="{ scope }">
        {{ scope.row.isPart | formatPart() }}
      </template>

      <template slot="action-button">
        <el-button-group>
          <el-button v-has="'btn-add'" @click="addHandle()" type="primary"
            >新增</el-button
          >
        </el-button-group>
      </template>

      <template slot="opt" slot-scope="{ scope }">
        <template v-if="scope.row.deleteFlag === 0">
          <el-link
            v-has="'btn-edit'"
            :underline="false"
            type="primary"
            class="blue--text text--darken-2"
            @click="editHandle(scope.row)"
          >
            编辑
          </el-link>
          <el-link
            v-has="'btn-cancellation'"
            :underline="false"
            type="primary"
            class="ml-3 blue--text text--darken-2"
            @click="delHandle(scope.row)"
          >
            注销
          </el-link>
          <el-link
            v-has="'btn-grant-role'"
            :underline="false"
            type="primary"
            class="ml-3 blue--text text--darken-2"
            @click="roleHandle(scope.row)"
          >
            授予角色
          </el-link>
          <el-link
            v-has="'btn-password-reset'"
            :underline="false"
            type="primary"
            class="ml-3 blue--text text--darken-2"
            @click="resetPwdHandle(scope.row)"
          >
            重置密码
          </el-link>
        </template>
        <template v-if="scope.row.deleteFlag === 1">
          <el-link
            v-has="'btn-remove-cancel'"
            :underline="false"
            type="primary"
            class="ml-3 blue--text text--darken-2"
            @click="unDestroyHandle(scope.row)"
          >
            解除注销
          </el-link>
        </template>
        <template v-if="scope.row.deleteFlag === 2">
          <el-link
            v-has="'btn-remove-lock'"
            :underline="false"
            type="primary"
            class="ml-3 blue--text text--darken-2"
            @click="unLockHandle(scope.row)"
          >
            解锁
          </el-link>
        </template>
      </template>
      <template slot="deleteFlag" slot-scope="{ scope }">
        <span
          :style="{ background: statusColor(scope.row.deleteFlag) }"
          class="status-info"
        />{{ scope.row.deleteFlag | dictFormat(userStatusDs) }}
      </template>
    </i-search-el-table>
    <add
      ref="formDialog"
      v-model="dialog.show"
      :id="selectionId"
      @show="dialog.show = false"
      @refreshTable="handleFilter"
    />
    <role
      ref="roleDialog"
      v-model="roleDialog.show"
      :user-id="selectionUserId"
      :user-name="selectionUserName"
      @show="roleDialog.show = false"
      @refreshTable="handleFilter"
    />
  </div>
</template>

<script>
import Treeselect from "@riophae/vue-treeselect";
import "@riophae/vue-treeselect/dist/vue-treeselect.css";
import Pagination from "@/components/Pagination";
import Add from "./Add";
import Role from "./role";
import * as utils from "@/utils";
import ISearchElTable from "@/components/ISearchElTable";
export default {
  name: "User",
  components: {
    Treeselect,
    Pagination,
    Add,
    Role,
    ISearchElTable,
  },
  filters: {
    formatPart(val) {
      if (val == "1") {
        return "是";
      } else if (val == "2") {
        return "否";
      } else {
        return "";
      }
    },
  },
  data() {
    return {
      columns: [
        {
          label: "用户名",
          key: "userName",
          align: "center",
          "min-width": 140,
        },
        {
          label: "登录帐号",
          key: "userCode",
          align: "center",
          "min-width": 120,
        },

        {
          label: "所属机构",
          key: "orgName",
          align: "center",
          "min-width": 150,
        },
        {
          label: "身份证号",
          key: "idCard",
          align: "center",
          "min-width": 170,
        },
        {
          label: "手机号",
          key: "phone",
          align: "center",
          "min-width": 120,
        },
        {
          label: "角色名称",
          key: "roleName",
          align: "center",
          "min-width": 150,
        },
        {
          label: "角色状态",
          key: "deleteFlag",
          align: "center",
          "min-width": 120,
        },
        {
          label: "操作",
          key: "opt",
          align: "center",
          fixed: true,
          "min-width": 260,
        },
      ],
      queryForm: {
        pageNum: 1,
        pageSize: 10,
        userName: null,
        userCode: null,
        user: "",
        region: "",
        delFlag: "",
        orgId: null,
        isPart: "",
      },
      total: 0,
      queryLoading: true,
      value: null,
      options: [],
      roleDs: [],
      isPartDs: [],
      selectionId: null,
      selectionUserId: null,
      selectionUserName: null,
      normalizer(node) {
        return {
          id: node.id,
          label: node.name,
          children: node.childrens,
        };
      },
      userStatusDs: [
        { name: "正常", code: 0 },
        { name: "已注销", code: 1 },
        { name: "已锁定", code: 2 },
      ],
      isPartDs: [
        { name: "是", code: 1 },
        { name: "否", code: 2 },
      ],
      tableData: {},
      dialog: {
        show: false,
      },
      roleDialog: {
        show: false,
      },
    };
  },
  computed: {
    statusColor() {
      return function (value) {
        if (value === 0) {
          return "#00A854";
        } else if (value === 1) {
          return "#BFBFBF";
        } else if (value === 2) {
          return "#FF9900";
        } else {
          return "";
        }
      };
    },
  },
  created() {
    this.getOrganizationTree();
    this.getAllUser();
    this.initTable();
  },
  methods: {
    initTable() {
      this.$api.role.getAllRole(this.queryForm).then((res) => {
        this.roleDs = res;
      });
    },
    getOrganizationTree() {
      this.$api.organization
        .getOrganizationTree({ isCredit: true })
        .then((res) => {
          console.log(JSON.parse(res));
          this.options = JSON.parse(res || "[]");
        });
    },
    getAllUser() {
      this.queryLoading = true;
      this.$api.user.getAllUser(this.queryForm).then((res) => {
        this.tableData = res;
        this.total = res.total;
        this.queryLoading = false;
      });
    },
    handleFilter() {
      this.queryForm.pageNum = 1;
      this.getAllUser();
    },
    resetForm(formName) {
      this.$refs[formName].resetFields();
      this.getAllUser();
    },
    addHandle() {
      this.selectionId = null;
      this.dialog.show = true;
      // 重置子组件form表单
      if (this.$refs.formDialog.$refs.form) {
        this.$refs.formDialog.$refs.form.resetFields();
      }
    },
    editHandle(row) {
      if (row) {
        this.selectionId = row.id;
        this.dialog.show = true;
      } else {
        if (this.$refs.table.isCheckedOne()) {
          this.selectionId = this.$refs.table.selection[0].id;
          this.dialog.show = true;
        }
      }
    },
    delHandle(row) {
      const ids = [];
      if (row) {
        ids.push(row.id);
        this.$confirm("确定要注销这个用户吗？", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }).then(() => {
          this.$api.user.updateCancel({ ids: ids.join(",") }).then((res) => {
            this.$message({
              message: utils.GLOBAL.OPERATE_SUCCESS,
              type: "success",
            });
            this.handleFilter();
          });
        });
      } else {
        if (this.$refs.table.isChecked()) {
          const size = this.$refs.table.selection.length;
          let hasdestroy = false;
          this.$refs.table.selection.forEach((item) => {
            ids.push(item.id);
            if (item.deleteFlag === 1) {
              hasdestroy = true;
              return false;
            }
          });
          if (hasdestroy) {
            this.$message({
              message: "只有未注销的用户才能注销！",
              type: "warning",
            });
            return false;
          }
          this.$confirm("确定要注销这" + ids.length + "个用户吗？", "提示", {
            confirmButtonText: "确定",
            cancelButtonText: "取消",
            type: "warning",
            title: "系统提示",
          }).then(() => {
            this.$api.user.updateCancel({ ids: ids.join(",") }).then((res) => {
              this.$message({
                message: utils.GLOBAL.OPERATE_SUCCESS,
                type: "success",
              });
              this.handleFilter();
            });
          });
        }
      }
    },
    unDestroyHandle(row) {
      const ids = [];
      if (row) {
        ids.push(row.id);
        this.$confirm("确定要解除注销用户吗？", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }).then(() => {
          this.$api.user.updateUnlock({ ids: ids.join(",") }).then((res) => {
            this.$message({
              message: utils.GLOBAL.OPERATE_SUCCESS,
              type: "success",
            });
            this.handleFilter();
          });
        });
      }
    },
    roleHandle(row) {
      if (row) {
        this.selectionUserId = row.id;
        this.selectionUserName = row.userName;
        this.roleDialog.show = true;
      } else {
        if (!this.$refs.table.isCheckedOne()) {
          return;
        }
        this.selectionUserId = this.$refs.table.selection[0].id;
        this.selectionUserName = this.$refs.table.selection[0].userName;
        this.roleDialog.show = true;
      }
    },
    resetPwdHandle(row) {
      const ids = [];
      if (row) {
        ids.push(row.id);
        this.$confirm("确定重置选择用户密码吗？", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }).then(() => {
          this.$api.user.resetPwd({ ids: ids.join(",") }).then((res) => {
            this.$message({
              message: utils.GLOBAL.OPERATE_SUCCESS,
              type: "success",
            });
            this.handleFilter();
          });
        });
      } else {
        if (!this.$refs.table.isChecked()) {
          return;
        }
        this.$refs.table.selection.forEach((item) => {
          ids.push(item.id);
        });
        this.$confirm("确定重置选择用户密码吗？", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }).then(() => {
          this.$api.user.resetPwd({ ids: ids.join(",") }).then((res) => {
            this.$message({
              message: utils.GLOBAL.OPERATE_SUCCESS,
              type: "success",
            });
            this.handleFilter();
          });
        });
      }
    },
    unLockHandle(row) {
      const ids = [];
      if (row) {
        ids.push(row.id);
        this.$confirm("确定要解锁用户吗？", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }).then(() => {
          this.$api.user.updateUnlock({ ids: ids.join(",") }).then((res) => {
            this.$message({
              message: utils.GLOBAL.OPERATE_SUCCESS,
              type: "success",
            });
            this.handleFilter();
          });
        });
      } else {
        if (!this.$refs.table.isChecked()) {
          return;
        }
        let lock = false;
        this.$refs.table.selection.forEach((item) => {
          ids.push(item.id);
          if (item.deleteFlag !== 2) {
            lock = true;
            return false;
          }
        });
        if (lock) {
          this.$message({
            message: "只有已锁定的用户才能解锁！",
            type: "warning",
          });
          return false;
        }
        this.$confirm("确定要解锁用户吗？", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }).then(() => {
          this.$api.user.updateUnlock({ ids: ids.join(",") }).then((res) => {
            this.$message({
              message: utils.GLOBAL.OPERATE_SUCCESS,
              type: "success",
            });
            this.handleFilter();
          });
        });
      }
    },
  },
};
</script>
<style lang="scss" scoped>
.status-info {
  display: inline-block;
  width: 9px;
  height: 9px;
  margin: 0 5px;
  border-radius: 50%;
}
/deep/ .el-dropdown {
  display: inline-block;
  position: relative;
  color: #606266;
  font-size: 14px;
  border-left: 1px solid #dcdfe6;
}
</style>
