<template>
  <div>
    <el-dialog
      :close-on-click-modal="false"
      :visible.sync="show"
      title="授予角色"
      width="800px"
      @closed="closed"
    >
      <i-search-el-table
        ref="userRoleTable"
        :query-form="queryForm"
        :columns="columns"
        index
        :data="data"
        :show-page-title="false"
        :advance-query="true"
        :advanceQueryButton="true"
        :page-sizes="[5, 15, 20]"
        @pagination="initDataTable"
      >
        <template slot="simple-form">
          <el-form-item @submit.native.prevent>
            <el-input
              v-model.trim="queryForm.roleName"
              size="small"
              placeholder="请输入角色名称"
              clearable
            >
              <el-button
                slot="append"
                @click="$refs.userRoleTable.handleFilter()"
                icon="el-icon-search"
              ></el-button>
            </el-input>
          </el-form-item>
        </template>
        <template slot="search-form">
          <el-form-item label="授权状态：" prop="type">
            <el-select
              v-model="queryForm.type"
              style="width: 100%"
              placeholder="请选择"
            >
              <el-option
                v-for="item in statusDs"
                :key="item.code"
                :label="item.name"
                :value="item.code"
              />
            </el-select>
          </el-form-item>
          <!-- <el-form-item label="拥有产品：" prop="productCode">
            <el-select v-model="queryForm.productCode" style="width: 100%" placeholder="请选择">
              <el-option v-for="item in productTypeDs" :key="item.code" :label="item.name" :value="item.code" />
            </el-select>
          </el-form-item> -->
        </template>
        <template slot="type" slot-scope="{ scope }">
          <span
            class="status-info"
            :style="{ background: statusColor(scope.row.type) }"
          ></span
          >{{ scope.row.type | dictFormat(statusDs) }}
        </template>
        <template slot="action-button">
          <el-button
            v-has:parentUrl="'btn-grant'"
            type="primary"
            @click="roleHandle"
            >授权</el-button
          >
          <el-button
            v-has:parentUrl="'btn-grant-cancle'"
            type="danger"
            @click="roleCancelHandle"
            >取消授权</el-button
          >
        </template>
      </i-search-el-table>
    </el-dialog>
  </div>
</template>
<script>
import { getDictEntrysByCode } from "@/utils";
import ISearchElTable from "@/components/ISearchElTable/index";
import Treeselect from "@riophae/vue-treeselect";
import "@riophae/vue-treeselect/dist/vue-treeselect.css";
import * as utils from "@/utils";
export default {
  name: "Add",
  components: {
    ISearchElTable,
    Treeselect,
  },
  props: {
    value: {
      default: false,
      type: Boolean,
    },
    userId: {
      default: null,
      type: String,
    },
    userName: {
      default: null,
      type: String,
    },
  },
  data() {
    return {
      parentUrl: "#system-manage/user/list",
      show: false,
      columns: [
        { label: "角色名称", key: "name", align: "center", "min-width": 150 },
        {
          label: "角色编码",
          key: "roleCode",
          align: "center",
          "min-width": 150,
        },
        { label: "授权状态", key: "type", align: "center", "min-width": 150 },
      ],
      queryForm: {
        pageNum: 1,
        pageSize: 5,
        roleName: null,
        areaCode: null,
        type: null,
        userId: null,
      },
      data: {},
      loading: false,
      defaultProps: {
        children: "children",
        label: "name",
      },
      normalizer(node) {
        return {
          id: node.id,
          label: node.name,
          children: node.childrens,
        };
      },
      areaCodeDs: [],
    };
  },
  computed: {
    statusColor() {
      return function (value) {
        if (value === 1) {
          return "#FF0000";
        } else if (value === 2) {
          return "#009900";
        } else {
          return "";
        }
      };
    },
    statusDs() {
      return [
        { name: "未授权", code: 1 },
        { name: "已授权", code: 2 },
      ];
    },
    productTypeDs() {
      return getDictEntrysByCode("PRODUCT_TYPE");
    },
  },
  watch: {
    value(value) {
      this.show = value;
      if (this.userId) {
        this.queryForm = this.$options.data().queryForm;
        this.initDataTable();
      }
    },
  },
  methods: {
    initDataTable() {
      this.loading = true;
      this.queryForm.userId = this.userId;
      this.$api.user.userRole(this.queryForm).then((res) => {
        this.loading = false;
        this.data = res;
        console.info(res);
      });
    },
    dialogShowChg() {
      this.$emit("show");
    },
    closed() {
      this.dialogShowChg();
    },
    getOrganizationTree() {
      this.$api.organization
        .getOrganizationTree({ isCredit: true })
        .then((res) => {
          this.areaCodeDs = res.body;
        });
    },
    roleHandle() {
      if (!this.$refs.userRoleTable.isCheckedOne()) {
        return false;
      }
      const roleInfo = this.$refs.userRoleTable.selection[0];
      if (roleInfo.userCode) {
        this.$message({
          message: "必须选择一个未授予的角色！",
          type: "warning",
        });
        return;
      }
      this.$confirm(
        "确定要授予" + this.userName + "“" + roleInfo.name + "”的角色吗？",
        {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }
      )
        .then(() => {
          this.$api.user
            .insertUserRole({ userId: this.userId, roleIds: roleInfo.id })
            .then(() => {
              this.$message({
                message: utils.GLOBAL.OPERATE_SUCCESS,
                type: "success",
              });
              this.dialogShowChg();
              this.$emit("refreshTable");
            });
        })
        .catch(() => {});
    },
    roleCancelHandle() {
      if (!this.$refs.userRoleTable.isCheckedOne()) {
        return false;
      }
      const roleInfo = this.$refs.userRoleTable.selection[0];
      if (!roleInfo.userCode) {
        this.$message({
          message: "必须选择一个已授予的角色！",
          type: "warning",
        });
        return;
      }
      this.$confirm(
        "确定要取消" + this.userName + "“" + roleInfo.name + "”的角色吗？",
        {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
          title: "系统提示",
        }
      )
        .then(() => {
          this.$api.user
            .deleteUserRole({ userId: this.userId, roleIds: roleInfo.id })
            .then(() => {
              this.dialogShowChg();
              this.initDataTable();
              this.$emit("refreshTable");
            });
        })
        .catch(() => {});
    },
  },
};
</script>

<style scoped>
.status-info {
  display: inline-block;
  width: 9px;
  height: 9px;
  margin: 0 5px;
  border-radius: 50%;
}
</style>
